#!/usr/bin/env python3

from lxml import etree
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service
import sys
import time

# check amount of passed arguments
if (len(sys.argv) != 2):
    print("usage: {} companyName ".format(sys.argv[0]))
    sys.exit(1)

options = FirefoxOptions()

# headless mode
options.add_argument("--headless")

# certificate errors
options.add_argument("--ignore-ssl-errors=yes")
options.add_argument('--ignore-certificate-errors')

# user agent
options.set_preference("general.useragent.override", "Safari: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.3 (KHTML, like Gecko) Version/11.1 Safari/605.1.3")

# prevent creation of geckodriver.log
service = Service(log_output="/dev/null")
driver = webdriver.Firefox(options=options, service=service)

# 10 seconds timeout
driver.set_page_load_timeout(10)

# 15 seconds default wait for element to be clickable
driver.implicitly_wait(15)

url = "https://sourcegraph.com/search?q=" + sys.argv[1]
driver.get(url)

# scroll to bottom
time.sleep(5)

for i in range(8):
    actions = ActionChains(driver)              
    actions.send_keys(Keys.END).perform()
    time.sleep(2)

sourceCode = driver.page_source

tree = etree.HTML(sourceCode)

allUrls = []

for element in tree.iterdescendants():
    # print repository url
    if (element.tag == "a"):
        className = element.get("class")
    
        if (className is not None and "AnchorLink-module__anchor-link_sKGAI" in className):
            href = element.get("href")
            if (href is not None and "github.com" in href):
                splitHref = href.split("/")
                currentUrl = "https://github.com/" + splitHref[2] + "/" + splitHref[3]
                allUrls.append(currentUrl)

uniqUrls = sorted(set(allUrls))

for u in uniqUrls:
    print(u)

driver.close()

