#!/usr/bin/env python3

from lxml import etree
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service
import sys
import time

# check amount of passed arguments
if (len(sys.argv) != 2):
    print("usage: {} companyName".format(sys.argv[0]))
    print("Visit viewdns.info and extract reverse whois lookups")
    sys.exit(1)

options = FirefoxOptions()

# headless mode
options.add_argument("--headless")

# certificate errors
options.add_argument("--ignore-ssl-errors=yes")
options.add_argument('--ignore-certificate-errors')

# user agent
options.set_preference("general.useragent.override", "Safari: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.3 (KHTML, like Gecko) Version/11.1 Safari/605.1.3")

# prevent creation of geckodriver.log
service = Service(log_output="/dev/null", executable_path="/usr/local/bin/geckodriver")
driver = webdriver.Firefox(options=options, service=service)

# 6 seconds timeout
driver.set_page_load_timeout(10)

# 10 seconds default wait for element to be clickable
driver.implicitly_wait(10)

# browse to viewdns
companyName = sys.argv[1].replace(" ", "+")
url = "https://viewdns.info/reversewhois/?q=" + companyName
driver.get(url)

# scroll to bottom
time.sleep(2)
actions = ActionChains(driver)
actions.send_keys(Keys.END).perform()
time.sleep(2)

sourceCode = driver.page_source

# parse results
tree = etree.HTML(sourceCode)

# print each column
allTrs = tree.xpath("//tr")

for tr in allTrs:
    allTds = tr.xpath(".//td")
    column = []
    
    # get all cells of each column
    if (len(tr) == 3):
        for td in allTds:
            if td.text is not None:
                column.append(td.text.strip())
            else:
                column.append(" ")

        for cell in column:
            cell = cell.replace(";"," ")
            print(cell, end = " ; ")
        print("")

driver.close()


