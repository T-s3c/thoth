#!/usr/bin/env python3

from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service
from selenium import webdriver                        
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import sys

# check amount of passed arguments
if (len(sys.argv) != 2):
    print("usage: {} word".format(sys.argv[0]))
    print("Visit tmdb.eu and extract brand names")
    sys.exit(1)

options = FirefoxOptions()

# headless mode
options.add_argument("--headless")

# certificate errors
options.add_argument("--ignore-ssl-errors=yes")
options.add_argument('--ignore-certificate-errors')

# user agent
options.set_preference("general.useragent.override", "Safari: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.3 (KHTML, like Gecko) Version/11.1 Safari/605.1.3")

# prevent creation of geckodriver.log
service = Service(log_output="/dev/null")
driver = webdriver.Firefox(options=options, service=service)

# 10 seconds default wait for element to be clickable
driver.implicitly_wait(10)

companyName = sys.argv[1]
baseUrl = "https://tmdb.eu/suche/marken.html?s=" + companyName + "&in=trademark&db%5B%5D=dpma&db%5B%5D=euipo&db%5B%5D=wipo&db%5B%5D=swiss&db%5B%5D=uspto&match=is&classes=&page="
print("ID ; Brand ; Class ; Owner ; Filling ; Registration ; End of Protection ; Status")

for counter in range(1, 9):
    currentUrl = baseUrl + str(counter)
    driver.get(currentUrl)

    # get table cells
    tableRows = driver.find_elements(By.XPATH, '//div[@class="tm-results-entry"]')
    
    for row in tableRows:
        line = row.text.replace(";","")
        line = line.replace("\n"," ; ")
        print(line)
    
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")

    currentPage = driver.current_url
    pageNumber = currentPage[-1:]

    # exit after last page
    if (int(pageNumber) != counter):
        exit(0)

driver.close()

