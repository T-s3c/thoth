#!/usr/bin/env python3

from lxml import etree
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service
import sys
import time

# check amount of passed arguments
if (len(sys.argv) != 2):
    print("usage: {} companyName".format(sys.argv[0]))
    print("Visit handelsregister.de and extract company names")
    sys.exit(1)

options = FirefoxOptions()

# headless mode
options.add_argument("--headless")

# certificate errors
options.add_argument("--ignore-ssl-errors=yes")
options.add_argument('--ignore-certificate-errors')

# user agent
options.set_preference("general.useragent.override", "Safari: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.3 (KHTML, like Gecko) Version/11.1 Safari/605.1.3")

# prevent creation of geckodriver.log
service = Service(log_output="/dev/null", executable_path="/usr/local/bin/geckodriver")
driver = webdriver.Firefox(options=options, service=service)

# 10 seconds default wait for element to be clickable
driver.implicitly_wait(10)

url = "https://www.handelsregister.de"
driver.get(url)
time.sleep(5)

# get current language settings
greetingsElement = driver.find_elements(By.ID, "zeile1")
greetings = greetingsElement[0].get_attribute("innerHTML")
time.sleep(2)

if ("Common register portal" in greetings):
   searchButton = "Advanced search"
   pressSearch = "Find"
elif ("Gemeinsames Registerportal" in greetings):
   searchButton = "Erweiterte Suche"
   pressSearch = "Suchen"
else:
    print("Sorry only support for englisch or german, switch your default language settings for gecko")
    searchButton = ""
    exit(1)

# click on Advanced Search
advSearch = driver.find_elements(By.XPATH, "//*[contains(text(), '" + searchButton + "')]")
advSearch[1].click()
time.sleep(3)

# enter search key
textField = driver.find_element(By.ID, "form:schlagwoerter")
textField.send_keys(sys.argv[1])
time.sleep(2)

# choose 100 results from dropdown
driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
time.sleep(1)
dropDown = driver.find_elements(By.XPATH, './/span[@class = "ui-icon ui-icon-triangle-1-s ui-c"]')
dropDown[3].click()
time.sleep(1)
insideDropdown = driver.find_elements(By.ID, "form:ergebnisseProSeite_3")
insideDropdown[0].click()

# click on search
obj = driver.find_elements(By.XPATH, "//*[contains(text(), '" + pressSearch + "')]")
obj[0].click()

time.sleep(13)

# parse results
sourceCode = driver.page_source
tree = etree.HTML(sourceCode)

tbody = tree.xpath('//*[@id="ergebnissForm:selectedSuchErgebnisFormTable_data"]')[0]
allTrsClasses = ["ui-widget-content ui-datatable-even", "ui-widget-content ui-datatable-odd"]

for trClass in allTrsClasses:
    allEvenTrs = tbody.xpath('.//tr[@class="' + trClass + '"]')

    for tr in allEvenTrs:
        # print name of company, location and history
        results = tr.xpath('.//span[contains(@class, "marginLeft20") or contains(@class, "verticalText") or contains(@class, "marginLeft20 fontSize85")]')

        for i in results:
            # skip status
            if (i.text == "aktuell" or i.text == "currently registered"):
                continue

            print(i.text, end="; ")

        print("")

driver.close()

