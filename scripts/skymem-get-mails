#!/usr/bin/env python3

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.common.by import By
from selenium.webdriver.firefox.service import Service
import urllib.parse
import sys
import time

if (len(sys.argv) != 2):
    print("usage: {} domain".format(sys.argv[0]))
    print("Visit skymem.info and extract e-mail addresses")
    sys.exit(1)

options = FirefoxOptions()
options.add_argument("--ignore-ssl-errors=yes")
options.add_argument('--ignore-certificate-errors')
options.set_preference("network.http.redirection-limit", 4)
options.add_argument("--headless")
service = Service(log_output="/dev/null", executable_path="/usr/local/bin/geckodriver")
driver = webdriver.Firefox(options=options, service=service)
driver.set_page_load_timeout(20)

allMails = []

# phonebook - currently deprecated due to obligation to login 

#driver.get("https://phonebook.cz")
#time.sleep(3)
#
#textField = driver.find_element_by_id("domain")
#textField.send_keys(sys.argv[1])
#time.sleep(1)
#textField.send_keys(Keys.RETURN)
#time.sleep(1)
#driver.find_element_by_id("submit1").click()
#time.sleep(2)
#atags = driver.find_element_by_id("result").find_elements_by_tag_name("a")
#
#allMails = []
#
#for t in atags:
#    if (sys.argv[1] in t.get_attribute("innerHTML")):
#        allMails.append(t.get_attribute("innerHTML"))

# skymem

domain = urllib.parse.quote(sys.argv[1])
driver.get("https://www.skymem.info/srch?q=" + domain)
time.sleep(5)

elems = driver.find_elements(By.XPATH, "//a[@href]")
allSkymemMails = []
domainLink = ""

for elem in elems:
    href = elem.get_attribute("href")

    if (sys.argv[1] in href):
        allSkymemMails.append(href)

    if ("/domain/" in href):
        domainLink = href

# get amount of pages
pageCounterLink = domainLink.split("=")

if (domainLink == ""):
    print("No results found for: " + sys.argv[1])
    exit(0)

driver.get(domainLink)
time.sleep(5)

elements = driver.find_elements(By.XPATH, "//a[@href]")
pageSize = 0

for e in elements:
    ref = e.get_attribute("href")

    if (sys.argv[1] in ref):
        allSkymemMails.append(ref)

    # get highest page counter
    if ("p=" in ref and not "#" in ref):
        pageCounter = ref.split("=")

        if (int(pageCounter[1]) > pageSize):
            pageSize = int(pageCounter[1])

for i in range(3, pageSize):
    driver.get(pageCounterLink[0] + "=" + str(i))
    time.sleep(5)

    try:
        elements = driver.find_elements(By.XPATH, "//a[@href]")
    except:
        print("Frame detached! Here are the possibly incomplete results:")
        break

    for e in elements:
        ref = e.get_attribute("href")

        if (sys.argv[1] in ref):
            allSkymemMails.append(ref)

driver.close()

# sort unique and print
sortedSkymem = sorted(set(allSkymemMails))

for skymemLink in sortedSkymem:
    if ("@" + sys.argv[1] in skymemLink):
        splittedSkymen = skymemLink.split("?q=")
        splitSkymem = splittedSkymen[1].split("'")
        allMails.append(splittedSkymen[1])

# print results
allMailsSorted = sorted(set(allMails))

for m in allMailsSorted:
    print(m)

